//삼각함수
//소수점 아래로 무한으로 계속되기 때문에 반드시 매크로(상수)정의를 해야한다.

struct STAR
{
	int x;
	int y;
};					//x,y를 쓸거면 차라리 point ptMouse를 쓰는게 낫지...
/*for (int i = 0; i <= 6; i++)
	{
		_star[i].x = cosf((i * 72 - 90)*PI / 180.0f) * 200 + WINSIZE_X / 2;
		_star[i].y = sinf((i * 72 - 90)*PI / 180.0f) * 200 + WINSIZE_Y / 2;
	}

//각도표기 -> 라디안 표기전환
#define DEGREE_RADIAN(_deg)			(M_PI * (_deg) / 180.0f)
//라디안에서 디그리로
	//왼쪽부터 2자리만 읽겠다. %.2f
	sprintf_s(strRadian, "%.2f 라디안 값은 %.2f 디그리 값과 같다.",
/*
정의 : 수학에서의 삼각함수는 직각 삼각형의 각을 직각 삼각형 변들의 길이 비로 나타내는 함수
		(직각 삼각형일때만 성립)
		증명보다 응용으로 컴파일러에게 전달만 해주면 됨

-게임에서 각도를 이용할때 필요하다
	ㄴ 발사체의 각도나 캐릭터의 대각선 이동 등등..

-사인(sin)					
:제일 긴 빗변과 높이의 비율을 구해주는 함수

-코사인(cos)
:빗변과 밑변의 비율을 구해주는 함수

-탄젠트(tan)
:직각 삼각형에서 어떠한 각도를 넣었을때 밑변과 대변의 비율을 구해줌

=======================================================

-API에서는 윈도우 좌표계를 사용한다.(유니티도) -> 일반적으로 사용하는 데카르트 좌표계가 아닌 Y축이 반대로 되어있기 때문에...

Y축 좌표를 구할때는 sin앞에 '-'(마이너스)를 붙여서 사용한다.

=======================================================

-호도법
: 컴퓨터는 각도를 인식할때 '도' 를 사용할 수 없다.
 그래서 호도법으로 바꿔줘서 사용가능
 -호도법은 각도를 나타내는 표현 방법 중 하나로 호의 길이로 각도를 나타낸다.
 -PI를 사용해 180도 각도를 표시하는 것
 -반지름의 길이와 같은 호에 대한 중심각을 1호도 (라디안)이라고 부른다.

 -Radian : 호도법을 표기할때 사용하는 단위
  ㄴ 반지름과 호의 길이가 같은 값을 1라디안으로 정의한다.
  ㄴ 1 라디안은 57.3도
  
-Degree : 일반적으로 사용하는 각의 단위 (각도)
	ㄴ 도수법 / 각도 표기라고 불린다.
	ㄴ 한바퀴를 360도로 정의한다.

60분법: 원의 둘레를 360등분하여 각의 크기를 나타내는 방법
PI(원주율) : 3.14
원의 둘레 : 2 * PI * 반지름
원의 넓이 : PI * 반지름 * 반지름

%%% PI의 라디안 값은 180도 %%%

//공식 -> 컴파일러에게 전달해 주는 공식

180 Degree = PI Radian
1 Degree = PI / 180 Radian
X Degree = X * PI / 180 Radian

PI Radian = 180 Degree
1 Radian = 180 / PI Degree
X Radian = X * PI / 180 Degree

##부채꼴 모양에서 반지름,호,중심각 3가지중에 2가지를 알면 다른 한가지를 구할 수 있다.

-두 점 사이의 거리
-> 두 점을 안다 -> 서로의 거리를 안다 -> 목표지점에서 시작지점을 뺀다.
	ㄴEnd -Start = 두 점사이의 거리(뺀 만큼의 차이값)
- 위 공식으로 각점(X,Y)사이의 변이량을 구한다.
	ㄴ DelTaX,DeltaY (업데이트 함수에 들어가서 계속 값을 갱신)

-대각선(빗변)의 거리
	ㄴ Distance =sqrt (DelTaX * DelTaX + DeltaY * DeltaY )
	ㄴ sqrt() : x의 제곱근을 구해주는 함수

-각을 구한다.
-float angle =acos (DelTaX / Distance);			acos 아크 코사인
	ㄴ 역삼각 함수 : 삼각함수의 결과 값을 넣어서 각도계산
		ㄴa or arc 가 붙으면 역삼각 함수를 의미한다.

	ㄴ 삼각함수 : 각도를 넣어서 계산

-각도에 대한 변이량을 구한다.
	ㄴfloat DeltaX =cos(radian) * Distance(이동량);		//수식이 이상하면 이상하게 움직인다 그건 위 값을 잘못넣어준 탓
	ㄴfloat DeltaY =-sin(radian) * Distance(이동량);


-x 축 좌표 구하기
-> x = cos (각도 * PI /180) * 속도;

-y 축 좌표 구하기
-> y = -sin (각도 * PI /180) * 속도;

*/
